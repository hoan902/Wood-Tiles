// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using QuickType;
//
//    var levelRewardDesign = LevelRewardDesign.FromJson(jsonString);

namespace QuickType.LevelReward
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class LevelRewardDesign
    {
        [JsonProperty("LevelRewardDesign")]
        public List<LevelRewardDesignElement> LevelRewardDesignLevelRewardDesign { get; set; }
    }

    public partial class LevelRewardDesignElement
    {
        [JsonProperty("LevelID")]
        public long LevelId { get; set; }

        [JsonProperty("Rewards")]
        public List<RewardDesignElement> Rewards { get; set; }
    }

    public partial class RewardDesignElement
    {
        [JsonProperty("RewardID")]
        public string RewardId { get; set; }

        [JsonProperty("Num")]
        public int Num { get; set; }
    }

    public partial class LevelRewardDesign
    {
        public static LevelRewardDesign FromJson(string json) => JsonConvert.DeserializeObject<LevelRewardDesign>(json, QuickType.LevelReward.Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this LevelRewardDesign self) => JsonConvert.SerializeObject(self, QuickType.LevelReward.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }

}
